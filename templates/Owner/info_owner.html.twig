{% extends('base.html.twig') %}
{% block title %}
    Info Owner
{% endblock %}
{% block body %}
    <h1>General INFO</h1>

    {#TODO: meter validacion de usuario logado#}
    {#{% include 'fbSdk.html.twig' %}#}

    {% verbatim %}
        <script id="owner_template" type="text/x-handlebars-template">
            <p>Hello, {{ownerName}}</p>
        </script>
    {% endverbatim %}
    <div id="owner_info"></div>

    <h1>List of Things</h1>

    {% verbatim %}
        <style>
            .thing_error{
                color:red;
            }
            .thing_ok{
                color:green;
            }
        </style>
        <script id="things_template" type="text/x-handlebars-template">
            <ul>
            {{#each things}}
                <li class="" id="thing_id_{{this.id}}">{{this.id}}</li>
            {{/each}}
            </ul>
        </script>
    {% endverbatim %}
    <div id="things_info"></div>


    <div id="things"></div>

    <form action="{{ path('thing_create') }}" method="post">
        <p>id (url)</p>
        <input type="text" name="root">
        <p>user</p>
        <input type="text" name="user">
        <p>password</p>
        <input type="password" name="password">
        <input type="submit" value="Add Thing">
    </form>
    {#<h1>{{ url('api_owner') }}?fbDelegated={{ ownerFbDelegated }}</h1>#}
    <script>
        $(document).ready(
            function () {
                $.ajax({
                    url: "{{ url('api_owner', {fbDelegated :  ownerFbDelegated } ) }}",
                    success: function (owner) {
                        // console.log(owner);

                        // fill owner info
                        var source = document.getElementById("owner_template").innerHTML;
                        var template = Handlebars.compile(source);
                        var data = {ownerName: owner.name};
                        var html = template(data);
                        document.getElementById("owner_info").innerHTML = html;

                        // Fill Things with ConnectedThings
                        getThingConnectedInfo(owner.things);

                        // Things
                        var source = document.getElementById("things_template").innerHTML;
                        var template = Handlebars.compile(source);
                        var data = {things: owner.things};
                        var html = template(data);
                        document.getElementById("things_info").innerHTML = html;
                    }
                })

            });

        function getThingConnectedInfo(things) {
            // console.log(things);
            var arrayReturn = [];
            things.forEach(function (thing) {
                // console.log(thing);
                getOneThingConnectedInfo(thing.urlForThingConnected, thing.urlForThingInfo);
                // arrayReturn.push(getOneThingConnectedInfo(thing.urlForThingConnected));
                // arrayReturn.push(getOneThingConnectedInfo(thing.urlForThingConnected));
            });
            return arrayReturn;
        }

        function fillThingRow(thingConnected, urlForThingInfo) {

            // var urlForThingInfo = 'thing/1';
            // console.log(thingConnected);
            if (thingConnected.status === true) {
                // TODO manage thing front structure with handlebars
                $("#thing_id_" + thingConnected.data.id).addClass('thing_ok');
                // add name and brand
                $("#thing_id_" + thingConnected.data.id).append(' | ' + thingConnected.data.name + ' | ' + thingConnected.data.brand);
                // add View/Admin thing
                $("#thing_id_" + thingConnected.data.id).append('<button onclick="window.location.href = \'' + urlForThingInfo + '\'">Admin</button>');

            }
            else {
                // console.log(thingConnected);
                $("#thing_id_" + thingConnected.data.id).addClass('thing_error');
                // add error
                $("#thing_id_" + thingConnected.data.id).append(' | ' + thingConnected.message);

            }
        }


        // Victor Thing->
        function getOneThingConnectedInfo(urlForThingConnected, urlForThingInfo) {
            // var urlForThingInfo = 'thing/1';
            // console.log(url);
            $.ajax({
                url: urlForThingConnected,
                // success: fillThingRow(thing),  // esto no funciona
                success: function (thingConnectedInfo) {
                    console.log(thingConnectedInfo);
                    fillThingRow(thingConnectedInfo, urlForThingInfo);
                },
                error: function (thingConnectedInfo) {
                    console.log("error getOneThingConnectedInfo");
                    console.log(thingConnectedInfo);
                    return thingConnectedInfo;
                }
            })


            // TODO: api call to fill ThingConnectedInfo
            // return {"brand": "hc_brand" + id, "name": "hc_name" + id};
        }

    </script>
{% endblock %}