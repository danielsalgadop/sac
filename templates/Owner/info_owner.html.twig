{% extends('base.html.twig') %}
{% block title %}
    Info Owner
{% endblock %}
{% block body %}

    <div class="card">
        <div class="card-body">


            <h1>General INFO</h1>

            {% verbatim %}
                <script id="owner_template" type="text/x-handlebars-template">
                    <p>Hello, {{ownerName}}</p>
                </script>
            {% endverbatim %}
            <div id="owner_info"></div>


        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <h1>List of Things</h1>

            {% verbatim %}
        <style>
            .thing_error{
                color:red;
            }
            .thing_ok{
                color:green;
            }
        </style>
        <script id="things_template" type="text/x-handlebars-template">
            <ul>
            {{#each things}}
                <li class="" id="thing_id_{{this.id}}">{{this.id}}</li>
            {{/each}}
            </ul>
        </script>
    {% endverbatim %}

            <div id="things_info"></div>
            <div id="things"></div>

        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <h1>Add new Thing</h1>

            <form>
                <div class="form-group row">
                    <label for="root" class="col-sm-2 col-form-label col-form-label-sm">Id</label>
                    <div class="col-sm-10">
                        <input type="text" name="root" class="form-control" id="root" aria-describedby="emailHelp"
                               placeholder="url">
                    </div>
                    {#            <small  class="form-text text-muted">(url)</small>#}
                </div>
                <div class="form-group row">
                    <label for="user" class="col-sm-2 col-form-label col-form-label-sm">User</label>
                    <div class="col-sm-10">
                        <input type="text" name="root" class="form-control" id="user" aria-describedby="emailHelp"
                               placeholder="user in thing">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="password" class="col-sm-2 col-form-label col-form-label-sm">User</label>
                    <div class="col-sm-10">
                        <input type="password" name="root" class="form-control" id="password"
                               aria-describedby="emailHelp"
                               placeholder="password in thing">
                    </div>
                </div>
                <input type="submit" value="Add Thing" class="btn btn-primary">
        </div>
    </div>
    </form>
    {#    <form action="{{ path('thing_create') }}" method="post">#}
    {#        <p>id (url)</p>#}
    {#        <input type="text" name="root">#}
    {#        <p>user</p>#}
    {#        <input type="text" name="user">#}
    {#        <p>password</p>#}
    {#        <input type="password" name="password">#}
    {#    </form>#}
    <script>
        {#var ownerFbDelegatedToe = {{ app.session.get('ownerFbDelegated') }};#}
        // var ownerFbDelegatedToe = 123;

        $(document).ready(
            function () {
                $.ajax({
                    {#url: "{{ url('api_owner', {fbDelegated :  ownerFbDelegatedToe } ) }}",#}
                    url: "{{ url('api_owner') }}",
                    success: function (owner) {
                        // console.log(owner);

                        // fill owner info
                        var source = document.getElementById("owner_template").innerHTML;
                        var template = Handlebars.compile(source);
                        var data = {ownerName: owner.name};
                        var html = template(data);
                        document.getElementById("owner_info").innerHTML = html;

                        // Fill Things with ConnectedThings
                        getThingConnectedInfo(owner.things);

                        // Things
                        var source = document.getElementById("things_template").innerHTML;
                        var template = Handlebars.compile(source);
                        console.log(owner.things);
                        var data = {things: owner.things};
                        var html = template(data);
                        document.getElementById("things_info").innerHTML = html;
                    },
                    error: function (error) {
                        console.log(error);
                        window.location.replace("{{ url('login') }}");
                    }
                })

            });

        function getThingConnectedInfo(things) {
            var arrayReturn = [];
            things.forEach(function (thing) {
                console.log(thing);
                getOneThingConnectedInfo(thing.urlForThingConnected, thing.urlForThingInfo, thing.id);
            });
            return arrayReturn;
        }

        function fillThingRow(thingConnected, urlForThingInfo, thingId) {

            // console.log(thingConnected);
            var thingElement = $("#thing_id_" + thingId);

            if (thingConnected.status === true) {
                // TODO manage thing front structure with handlebars
                thingElement.addClass('thing_ok');
                // add name and brand
                thingElement.append(' | ' + thingConnected.data.name + ' | ' + thingConnected.data.brand);
                // add View/Admin thing
                thingElement.append('<button onclick="window.location.href = \'' + urlForThingInfo +
                    '\'">Admin</button>');

            }
            else {
                // console.log(thingConnected);
                thingElement.addClass('thing_error');
                // add error
                thingElement.append(' | ' + thingConnected.message);

            }
        }


        function getOneThingConnectedInfo(urlForThingConnected, urlForThingInfo, thingId) {

            $.ajax({
                url: urlForThingConnected,
                success: function (thingConnectedInfo) {
                    fillThingRow(thingConnectedInfo, urlForThingInfo,thingId);
                },
                error: function (thingConnectedInfo) {
                    let retval = {'status':false,'message':thingConnectedInfo.responseText};
                    fillThingRow(retval, '', thingId);
                }
            });
        }

    </script>
{% endblock %}