{% extends('Common/base.html.twig') %}
{% block title %}
    Info Owner
{% endblock %}
    {% block header %}
        {% include 'Owner/owner_header.html.twig' %}
    {% endblock %}
{% block body %}


    <div class="card">
        <div class="card-body">

            <h2>General INFO</h2>

            {% verbatim %}
                <script id="owner_template" type="text/x-handlebars-template">
                    <p>Hello, {{ownerName}}</p>
                </script>
            {% endverbatim %}
            <div id="owner_info"></div>

        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <h2>List of Things</h2>

            <table id="list_of_things" class="table table-striped table-sm table-hover">
                <thead class="thead-dark">
                <th>Name</th>
                <th>Brand</th>
                <th>Action</th>
                </thead>
                <tbody>
                {% verbatim %}
                <script id="things_template" type="text/x-handlebars-template">
                    {{#each things}}
                    {{/each}}
                </script>
            {% endverbatim %}
                </tbody>
            </table>

            <div id="things_info"></div>
            <div id="things"></div>

        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <h2>Add new Thing</h2>

            <form action="{{ path('thing_create') }}" method="post">
                <div class="form-group row">
                    <label for="root" class="col-sm-2 col-form-label col-form-label-sm">Endpoint</label>
                    <div class="col-sm-10">
                        <input type="text" name="root" class="form-control" id="root" aria-describedby="emailHelp"
                               placeholder="url">
                    </div>
                    {#            <small  class="form-text text-muted">(url)</small>#}
                </div>
                <div class="form-group row">
                    <label for="user" class="col-sm-2 col-form-label col-form-label-sm">User</label>
                    <div class="col-sm-10">
                        <input type="text" name="user" class="form-control" id="user" aria-describedby="emailHelp"
                               placeholder="user in thing">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="password" class="col-sm-2 col-form-label col-form-label-sm">Password</label>
                    <div class="col-sm-10">
                        <input type="password" name="password" class="form-control" id="password"
                               aria-describedby="emailHelp"
                               placeholder="password in thing">
                    </div>
                </div>
                <input type="submit" value="Add Thing" class="btn btn-primary">
            </form>
        </div>
    </div>


    <script>

        $(document).ready(
            function () {
                $.ajax({
                    url: "{{ url('api_owner') }}",
                    success: function (owner) {

                        // fill owner info
                        var ownerTemplate = Handlebars.compile(document.getElementById("owner_template").innerHTML);
                        document.getElementById("owner_info").innerHTML = ownerTemplate({ownerName: owner.name});

                        // fill Things with ConnectedThings
                        var listOfThingsTable = $("#list_of_things");

                        if (owner.things) {
                            owner.things.forEach(function (thing) {
                                fillOneThingOfOwner(thing.id, listOfThingsTable);
                            });

                            // Things
                            var thingTemplate = Handlebars.compile(document.getElementById("things_template").innerHTML);
                            document.getElementById("things_info").innerHTML = thingTemplate({things: owner.things});
                        } else {
                            listOfThingsTable.append(
                                '<tr><td colspan="3">Please fill in the form below to add a Thing</td></tr>');
                        }
                    },
                    error: function () {
                        window.location.replace("{{ url('login') }}");
                    }
                })
            });

        function fillThingRow(thingConnected, urlForThingInfo, listOfThingsTable) {

            if (thingConnected.status === true) {

                console.log(thingConnected.data.name);
                console.log(thingConnected.data.brand);

                listOfThingsTable.append(
                    '<tr>' +
                    '<td>' + thingConnected.data.name + '</td>' +
                    '<td>' + thingConnected.data.brand + '</td>' +
                    '<td><button class="btn btn-primary" onclick="window.location.href = \'' + urlForThingInfo + '\'">Admin</button></td>' +
                    '</tr>'
                );
            } else {
                listOfThingsTable.append('<tr class="table-danger"><td colspan="3">' + thingConnected.message + '</tr>');
            }
        }


        function fillOneThingOfOwner(thingId, listOfThingsTable) {

            // (spaghetti code alert) TODO use promises
            $.get({
                url: "{{ url('url_provider_for_thing_info') }}",
                data: {'thingId': thingId},
                success: function (urlThingInfoProvidedResponse) {

                    $.get({
                        url: "{{ url('url_provider_for_api_thing_info') }}",
                        data: {'thingId': thingId},
                        success: function (urlApiThingInfoProvidedResponse) {

                            $.get({
                                url: urlApiThingInfoProvidedResponse,
                                success: function (thingConnectedInfo) {
                                    fillThingRow(thingConnectedInfo, urlThingInfoProvidedResponse, listOfThingsTable);
                                },
                                error: function (error) {
                                    var thingConnectedInfoWithError = {
                                        'status': false, 'message': error.responseText
                                    };
                                    fillThingRow(thingConnectedInfoWithError, '', listOfThingsTable);
                                }
                            })
                        }
                    })
                }
            });
        }
    </script>
{% endblock %}